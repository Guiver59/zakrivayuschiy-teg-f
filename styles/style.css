/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

*/

.page {
  font-family: var(--main-font), sans-serif;
  background-image: var(--background-img);
  background-size: cover;
  min-inline-size: 320px;
  min-block-size: 100dvb;
  font-variation-settings: "wdth" var(--card-text-font-weight);
}

header,
main,
footer {
  justify-self: center;
}

main {
  display: grid;
  justify-items: center;
  gap: 50px;
}

.header {
  display: grid;
  width: var(--width-content); /*100%;*/
  font-family: var(--accent-font), sans-serif;
}

.title__header {
  display: grid;
  justify-self: center;
  gap: 20px;
  align-self: center;
  width: 100%;
  margin-top: 100px;
  margin-bottom: 100px;
  border: solid var(--border-width) #000;
  text-transform: uppercase;
  background-color: #fff;
}

.main__title {
  justify-self: center;
  align-self: end;
  margin-top: var(--header-margin);

  font-weight: normal;
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

.title {
  justify-self: center;
  align-self: start;

  margin-bottom: var(--header-margin);

  font-weight: normal;
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

.btn {
  display: grid;
  border: solid var(--border-width) #000;
  padding: 0;
  outline: none;
  background-color: #fff;
}

.btn:focus,
.btn:focus-visible {
  box-shadow: 2px 2px 0 0 var(--accent-color);
  outline: none;
}

.card {
  display: grid;
  width: var(--width-content);
  border: solid var(--border-width) #000;
  background-color: #fff;
}

.card__title {
  width: 100%;
  border-bottom: solid var(--border-width) #000;
  padding: 6px 10px 4px 10px;
  font-weight: 700;
  font-size: 18px;
}

.card__text__section {
  display: grid;
  gap: 27px;
  padding: 25px;
}

.card__text {
  font-size: 18px;
  letter-spacing: 0.045rem;
}

.card__image__section {
  display: grid;
  border-bottom: solid var(--border-width) #000;
}

.card__image {
  display: block;
  background-blend-mode: hard-light;
}

.card__label {
  position: absolute;
  z-index: 1;
  justify-self: end;
  margin-top: 25px;
  margin-right: 13px;
  opacity: 50%;
  font-family: var(--accent-font), sans-serif;

  font-weight: normal;

  font-size: 14px;
  text-shadow: -1px -1px 0px #fff, -1px 1px 0px #fff, 1px -1px 0px #fff,
    1px 1px 0px #fff;
  mix-blend-mode: hard-light;
}

.reaction {
  display: flex;
  justify-self: end;
  align-items: center;
  gap: 5px;
  margin-right: 25px;
  margin-bottom: 25px;
}

.card__like-button {
  gap: 12px;
  width: var(--button-like-width);
  /*padding: 0;*/
  height: var(--button-like-height);
}

.card__icon-button {
  height: 39px;
  border: solid var(--border-width) #00000000;
}

.card__icon-button:focus {
  box-shadow: none;
  outline: none;
  outline: none;
}

.card__icon-button:focus-visible {
  border: solid var(--border-width) var(--accent-color);
  box-shadow: none;
  outline: none;
}

.card__icon-button:hover {
  --heart-core-color: var(--accent-color);
  --heart-body-color: var(--accent-color);
}

.card__icon-button:active {
  --heart-core-color: red;
  --heart-body-color: red;
}

.card__icon-button:has(.is-liked) {
  --heart-core-color: red;
  --heart-body-color: red;
}

.like-icon.is-liked .contour {
  --heart-contur-color: red;
}

.like-icon:not(.is-liked) .contour {
  --heart-contur-color: #000;
}

svg .sparks {
  opacity: 0;
}

footer {
  margin-top: var(--footer-top-gap);
  padding-bottom: 100px;
}

.button__text {
  position: relative;
  display: grid;
  grid-auto-flow: row;
  justify-items: center;
  align-items: center;
  height: 100%;
  color: #fff;
  font-family: var(--accent-font), sans-serif;
  font-size: 14px;
  mix-blend-mode: difference;
}

.button__text::before {
  content: "";
  position: absolute;
  z-index: 0;
  justify-self: start;
  align-self: start;
  width: calc(var(--button-like-width) - 4px);
  height: calc(var(--button-like-height) - 4px);
  background-color: #fff;
  transform: scaleX(0);
  mix-blend-mode: difference;
}

.save__button {
  width: var(--button-save-width);
  height: var(--button-save-height);
}

.save__button .button__text::before {
  width: calc(var(--button-save-width) - 4px);
  height: calc(var(--button-save-height) - 4px);
}

.button__dialog .button__text::before {
  align-self: start;
  width: calc(var(--button-dialog-width) - 4px);
  height: calc(var(--button-dialog-height) - 4px);
}

.button__text:hover::before {
  transform: scaleX(1);
}

.btn__png {
  fill: #fff;
}

.isert-disk {
  position: fixed;
  border-width: 2px;
}

.isert-disk:not([open]) {
  pointer-events: none;
}

.isert-disk::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

.isert-disk:open {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-template-rows: min-content min-content;
  justify-items: center;
  align-items: center;
  gap: 20px;
}

.dialog__title {
  max-width: 200px;
  margin-bottom: 0;
  font-family: var(--accent-font), sans-serif;
  font-size: 14px;
  line-height: 150%;
  text-transform: uppercase;
}

.form__dialog {
  display: grid;
  grid-column-start: 1;
  grid-column-end: 3;
  width: 100%;
  min-height: 38px;
}

.button__dialog {
  display: inline;
  width: var(--button-dialog-width);
  height: var(--button-dialog-height);
}

.filter__sepia {
  filter: sepia(80%);
}

.filter__acid {
  filter: saturate(300%);
}

.filter__twilight {
  filter: saturate(25%);
}

.filter__negative {
  filter: invert(80%);
}

.filter__sunset {
  filter: hue-rotate(0.1turn);
}

.filter__blur {
  filter: blur(6px);
}

.filter__fog {
  filter: hue-rotate(0.25turn) blur(1px) contrast(50%);
}

/*.button__text::before{
  content: '';
  background-color: #000;  
  block-size: 100%;
  inline-size: 100%;
  position: absolute;  
  transition: transform 0.5s 0.2s;
  transform: translate(-100%);
  z-index: 0;
}

.button__text:is(:hover)::before {  
  transform: translate(0);
}
*/

@supports ((text-stroke: 1px #fff) or (-webkit-text-stroke: 1px #fff)) {
  card__label {
    text-shadow: none;
    -webkit-text-stroke: 1px #000000;
  }
}

@media (width > 375px) {
  :root {
    --footer-top-gap: 50px;
  }

  .main__title {
    margin-right: clamp(0.875rem, -1.4577rem + 9.9531vw, 7.5rem);
    margin-left: clamp(0.875rem, -1.4577rem + 9.9531vw, 7.5rem);
  }

  .title {
    font-stretch: condensed;
  }

  .save__button {
    --button-save-height: 51px;
    --button-save-width: 335px;
  }

  .card__image {
    display: block;
  }

  .button__text {
    grid-auto-flow: column;
  }

  .btn__png {
    width: 21px;
    height: 21px;
  }

  .card__label {
    margin-right: 25px;
  }

  main {
    gap: 52px;
  }
}

@media (prefers-reduced-motion: no-preference) {
  .btn:focus,
  .btn:focus-visible {
    transition: box-shadow 0.3s ease;
  }

  .card__icon-button:focus-visible {
    transition: border 0.3s ease;
  }

  .button__text:hover::before {
    transition: transform 0.5s ease-in-out;
    transform-origin: center left;
  }

  .core,
  .main-body {
    transition: fill 0.3s ease;
  }

  .card__icon-button:hover .main-body {
    transition-delay: 0.05s;
  }

  .card__icon-button:hover .core {
    transition-delay: 0;
  }

  .card__icon-button:not(:hover) .main-body {
    transition-delay: 0;
  }

  .card__icon-button:not(:hover) .core {
    transition-delay: 0.05s;
  }

  .contour {
    transition: fill 0.3s ease;
    transition-delay: 0.06s;
  }
  
  .like-icon:not(.is-liked) .contour {    
    transition: fill 0.1s linear;
  }

  .like-icon {
    transition: transform 0.3s ease-in-out;
    transition-delay: 0.1s;
  }

  .card__icon-button:has(.is-liked) .like-icon {
    animation: like-action 0.3s ease-in 0.1s; /* forwards, можно отыграть анимацию назад, так приятнее =)
               like-action 0.3s linear reverse forwards 0.4s;*/
  }

  .card__icon-button:has(.is-liked) .sparks {
    animation: sparking 0.3s ease-in 0.3s; /*forwards, 
               sparking 0.3s linear reverse forwards 0.3s; */
  }
}

@keyframes like-action {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.25);
  }
}

@keyframes sparking {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
